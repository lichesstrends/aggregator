#!/usr/bin/env bash
set -euo pipefail

DEFAULT_FILE="sample/lichess_sample.pgn.zst"
BIN="/app/target/debug/aggregator"
CARGO="/usr/local/cargo/bin/cargo"

REMOTE=0
SINCE=""
UNTIL=""
OUT_HOST="${OUT:-}"
FILES=()
LIST_URL=""
VERBOSE=0
SAVE=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    --remote|--ingest-remote) REMOTE=1; shift ;;
    --since|--from) SINCE="${2:-}"; shift 2 ;;
    --until)  UNTIL="${2:-}"; shift 2 ;;
    --out|-o) OUT_HOST="${2:-}"; shift 2 ;;
    --list-url) LIST_URL="${2:-}"; shift 2 ;;
    --save) SAVE=1; shift ;;
    -v|--verbose) VERBOSE=1; shift ;;
    -h|--help)
      mkdir -p data
      docker compose up -d dev >/dev/null
      docker compose exec -T dev bash -lc "$CARGO build -q"
      docker compose exec -T dev bash -lc "'$BIN' --help"
      exit 0
      ;;
    --) shift; break ;;
    -*) echo "Unknown option: $1" >&2; exit 1 ;;
    *)  FILES+=("$1"); shift ;;
  esac
done

if [[ $REMOTE -eq 0 && ${#FILES[@]} -eq 0 ]]; then
  FILES=("${LICHESS_FILE:-$DEFAULT_FILE}")
fi

mkdir -p data
docker compose up -d dev >/dev/null
docker compose exec -T dev bash -lc "$CARGO build -q"

# Normalize OUT path and create dirs on host
OUT_CONTAINER=""
if [[ -n "$OUT_HOST" ]]; then
  [[ "$OUT_HOST" == /app/* ]] && OUT_HOST="${OUT_HOST#/app/}"
  mkdir -p "$(dirname "$OUT_HOST")"
  if [[ "$OUT_HOST" == */ || "$OUT_HOST" != *.* ]]; then
    mkdir -p "$OUT_HOST"
  fi
  OUT_CONTAINER="/app/$OUT_HOST"
fi

if [[ $REMOTE -eq 1 ]]; then
  # Build args array for the Rust binary
  APP_ARGS=(--remote)
  [[ -n "$SINCE" ]]         && APP_ARGS+=(--since "$SINCE")
  [[ -n "$UNTIL" ]]         && APP_ARGS+=(--until "$UNTIL")
  [[ -n "$OUT_CONTAINER" ]] && APP_ARGS+=(--out "$OUT_CONTAINER")
  [[ -n "$LIST_URL" ]]      && APP_ARGS+=(--list-url "$LIST_URL")
  [[ $VERBOSE -eq 1 ]]      && APP_ARGS+=(-v)
  [[ $SAVE -eq 1 ]]         && APP_ARGS+=(--save)

  # Compose a shell-safe command for bash -lc
  cmd="'$BIN'"
  for a in "${APP_ARGS[@]}"; do
    cmd+=" $(printf '%q' "$a")"
  done

  docker compose exec -T dev bash -lc "$cmd"
  exit 0
fi

# --- Local files ---
BIN_FLAGS=()
[[ $VERBOSE -eq 1 ]] && BIN_FLAGS+=(-v)
[[ $SAVE -eq 1 ]] && BIN_FLAGS+=(--save)
[[ -n "$OUT_CONTAINER" ]] && BIN_FLAGS+=(--out "$OUT_CONTAINER")

for FILE in "${FILES[@]}"; do
  if [[ ! -f "$FILE" ]]; then
    echo "❌ PGN file not found: $FILE" >&2
    continue
  fi

  # zstdcat file → aggregator [flags]
  cmd="zstdcat $(printf '%q' "/app/$FILE") | '$BIN'"
  for a in "${BIN_FLAGS[@]}"; do
    cmd+=" $(printf '%q' "$a")"
  done

  docker compose exec -T dev bash -lc "$cmd"
done
